{"ast":null,"code":"var _jsxFileName = \"/Users/pearlborromeo/Desktop/471/react-planted-website/src/pages/login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./login.css\";\nimport { useContext, useRef } from \"react\";\nimport { loginCall } from \"../../apiCalls\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const username = useRef();\n  const password = useRef();\n  const {\n    user,\n    isFetching,\n    error,\n    dispatch\n  } = useContext(AuthContext);\n\n  const handleClick = e => {\n    e.preventDefault();\n    loginCall({\n      username: username.current.value,\n      password: password.current.value\n    }, dispatch);\n  };\n\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"loginLogo\",\n          children: \"Planted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loginDesc\",\n          children: \"Connect with other plant enthusiasts like you!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginRight\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginBox\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Username\",\n            required: true,\n            className: \"loginInput\",\n            ref: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            required: true,\n            minLength: \"6\",\n            className: \"loginInput\",\n            ref: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginButton\",\n            children: isFetching ? \"loading\" : \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loginForgot\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginRegisterButton\",\n            children: \"Create a New Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"x/AKyL/+cdCyDhqNqwEiW5H5FMk=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/pearlborromeo/Desktop/471/react-planted-website/src/pages/login/Login.jsx"],"names":["useContext","useRef","loginCall","AuthContext","Login","username","password","user","isFetching","error","dispatch","handleClick","e","preventDefault","current","value","console","log"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAMK,QAAQ,GAAGL,MAAM,EAAvB;AACA,QAAM;AAACM,IAAAA,IAAD;AAAOC,IAAAA,UAAP;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAsCV,UAAU,CAACG,WAAD,CAAtD;;AAGA,QAAMQ,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,SAAS,CAAC;AAACG,MAAAA,QAAQ,EAACA,QAAQ,CAACS,OAAT,CAAiBC,KAA3B;AAAiCT,MAAAA,QAAQ,EAACA,QAAQ,CAACQ,OAAT,CAAiBC;AAA3D,KAAD,EAAoEL,QAApE,CAAT;AACD,GAHD;;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,QAAQ,EAAEI,WAArC;AAAA,kCACE;AAAO,YAAA,WAAW,EAAC,UAAnB;AAA8B,YAAA,QAAQ,MAAtC;AAAuC,YAAA,SAAS,EAAC,YAAjD;AAA8D,YAAA,GAAG,EAAEN;AAAnE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,WAAW,EAAC,UAAnB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,QAAQ,MAAtD;AAAuD,YAAA,SAAS,EAAC,GAAjE;AAAqE,YAAA,SAAS,EAAC,YAA/E;AAA4F,YAAA,GAAG,EAAEC;AAAjG;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAA,sBAAiCE,UAAU,GAAC,SAAD,GAAW;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA9BuBJ,K;;KAAAA,K","sourcesContent":["import \"./login.css\"\nimport { useContext, useRef } from \"react\";\nimport { loginCall } from \"../../apiCalls\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Login() {\n  const username = useRef();\n  const password = useRef();\n  const {user, isFetching, error, dispatch} = useContext(AuthContext);\n  \n\n  const handleClick = (e) => {\n    e.preventDefault();\n    loginCall({username:username.current.value,password:password.current.value}, dispatch)\n  };\n  console.log(user);\n  return (\n    <div className=\"login\">\n      <div className=\"loginWrapper\">\n        <div className=\"loginLeft\">\n          <h3 className=\"loginLogo\">Planted</h3>\n          <span className=\"loginDesc\">Connect with other plant enthusiasts like you!</span>\n        </div>\n        <div className=\"loginRight\">\n          <form className=\"loginBox\" onSubmit={handleClick}>\n            <input placeholder=\"Username\" required className=\"loginInput\" ref={username}/>\n            <input placeholder=\"Password\" type=\"password\" required minLength=\"6\" className=\"loginInput\" ref={password}/>\n            <button className=\"loginButton\">{isFetching?\"loading\":\"Log In\"}</button>\n            <span className=\"loginForgot\">Forgot Password?</span>\n            <button className=\"loginRegisterButton\">Create a New Account</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}